# Generated by Django 3.0.4 on 2020-04-19 19:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ac_username', models.CharField(max_length=40)),
                ('password', models.CharField(max_length=30)),
                ('country', models.CharField(choices=[('Intercontinental', 'Intercontinental')], default='Intercontinental', max_length=20)),
                ('server', models.CharField(choices=[('s1', 's1'), ('s2', 's2'), ('s3', 's3'), ('s4', 's4'), ('s5', 's5')], max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='FaqList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=70)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GeneratePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('icon', models.CharField(max_length=40)),
                ('description', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('FOR BEGINNERS', 'FOR BEGINNERS'), ("I DON'T HAVE TIME", "I DON'T HAVE TIME"), ("I'M ON VACATION", "I'M ON VACATION")], default='FOR BEGINNERS', max_length=21)),
                ('price', models.IntegerField()),
                ('description', models.CharField(max_length=70)),
                ('special_style', models.CharField(blank=True, max_length=15, null=True)),
                ('max_time', models.IntegerField()),
                ('max_bots', models.IntegerField()),
                ('permission_list', models.ManyToManyField(to='sfbot.PermissionList')),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
            },
        ),
        migrations.CreateModel(
            name='GameSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tavern_status', models.CharField(choices=[('ON', 'ON'), ('OFF', 'OFF')], default='OFF', max_length=3)),
                ('tavern_settings', models.CharField(choices=[('Gold', 'Gold'), ('Exp', 'Exp'), ('Time', 'Time')], default='Exp', max_length=4)),
                ('arena_status', models.CharField(choices=[('ON', 'ON'), ('OFF', 'OFF')], default='OFF', max_length=3)),
                ('arena_settings', models.CharField(choices=[('Stop fight after 10 wins', 'Stop fight after 10 wins'), ('Attack opponents who have items for your cluster', 'Attack opponents who have items for your cluster')], default='Stop fight after 10 wins', max_length=50)),
                ('ac_settings', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='sfbot.AcSettings')),
            ],
        ),
        migrations.CreateModel(
            name='Bots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ON', 'ON'), ('OFF', 'OFF')], default='OFF', max_length=4)),
                ('time_left', models.IntegerField(null=True)),
                ('game_settings', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='sfbot.GameSettings')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sfbot.Plan')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
